<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.2.xsd">

	<description>SpringSecurity</description>

	<!-- If you enable single sign-on,To security:http plus entry-point-ref="casProcessingFilterEntryPoint" -->
	<security:http>
		<security:intercept-url pattern="/userRegister/**"
			filters="none" />
		<security:intercept-url pattern="/weixinPublic/**"
			filters="none" />
		<!-- If you enable single sign-on, please disable -->
		<security:form-login login-page="/redirect.jsp"
			authentication-failure-url="/redirect.jsp" default-target-url="/index.jsp"
			always-use-default-target="true" />
		<security:logout invalidate-session="true"
			logout-success-url="/redirect.jsp" />
		<security:concurrent-session-control
			max-sessions="10" expired-url="/redirect.jsp" />
	</security:http>
	<security:authentication-provider
		user-service-ref="userDetailsService">
		<security:password-encoder ref="passwordEncoder">
			<!-- <security:salt-source user-property="username" /> -->
		</security:password-encoder>
	</security:authentication-provider>

	<bean id="passwordEncoder"
		class="org.springframework.security.providers.encoding.Md5PasswordEncoder" />


	<bean id="userDetailsService"
		class=" com.ruijie.mcp.security.internal.UserDetailsServiceImpl">
		<property name="roleService" ref="roleService" />
		<property name="systemAdminBus" ref="systemAdminBus" />
	</bean>

	<!-- 角色管理 -->
	<bean id="roleService" class="com.ruijie.mcp.security.internal.RoleServiceImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="securityAuthoritiesHolder"
		class="com.ruijie.mcp.security.internal.SecurityAuthoritiesHolderImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate" />
	</bean>

	<bean id="filterSecurityInterceptor"
		class="org.springframework.security.intercept.web.FilterSecurityInterceptor"
		autowire="byType">
		<security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" />
		<property name="objectDefinitionSource" ref="filterInvocationDefinitionSource" />
	</bean>
	<bean id="filterInvocationDefinitionSource"
		class="com.ruijie.mcp.security.filter.UrlResourceFilterInvocationDefinitionSource">
		<property name="securityAuthoritiesHolder" ref="securityAuthoritiesHolder" />
	</bean>

	<bean id="securityResourceProcessor"
		class="com.ruijie.mcp.security.internal.SecurityResourceProcessorImpl">
		<property name="securityAuthoritiesHolder" ref="securityAuthoritiesHolder" />
		<property name="accessDecisionManager" ref="_accessManager" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages_zh_CN" />
	</bean>

	<bean id="securityRegisterService"
		class="com.ruijie.mcp.security.internal.SecurityRegisterServiceImpl">
		<property name="sessionRegistry" ref="_sessionRegistry" />
	</bean>
</beans>